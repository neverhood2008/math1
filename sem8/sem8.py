import numpy as np
import matplotlib.pyplot as plt
import math 
import scipy.stats as stats
#задача 1
print("задача 1")
# 1.Даны значения величины заработной платы заемщиков банка (zp)
# и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]. 
# Найдите ковариацию этих двух величин с помощью элементарных действий,
# а затем с помощью функции cov из numpy Полученные значения должны
# быть равны. Найдите коэффициент корреляции Пирсона с помощью ковариации 
# и среднеквадратичных отклонений двух признаков, а затем с использованием
# функций из библиотек numpy и pandas.
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110]
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]
a=[]
for i in range (0,len(zp)):
    a.append(zp[i]*ks[i])
print(f"ковариация = {np.cov(zp,ks)}")
cov=np.mean(a)-np.mean(zp)*np.mean(ks)
print(f"ковариация вторым способом = {np.cov(zp,ks)}")
print(f"корреляция = {np.corrcoef(zp,ks)}")
srk_zp=np.std(zp,ddof=0)
srk_ks=np.std(ks,ddof=0)
corr=np.cov(zp,ks,ddof=0)/(srk_ks*srk_zp)
print(f"корреляция вторым способом = {corr}")


#задача 2
print("задача 2")
# 2.Измерены значения IQ выборки студентов, обучающихся в местных 
# технических вузах: 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально.
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.
x=np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
alfa=0.05
x_sr=np.mean(x)
sigma=np.std(x,ddof=1)
n=10
t_alfa_2=stats.t.ppf(0.975,n-1)
print(f"доверительный интервал ({round(x_sr-t_alfa_2*sigma/math.sqrt(n),3)},{round(x_sr+t_alfa_2*sigma/math.sqrt(n),3)})")
#задача 3
#задача 3
print("задача 3")
# 3.Известно, что рост футболистов в сборной распределен нормально
# с дисперсией генеральной совокупности, равной 25 кв.см.
# Объем выборки равен 27, среднее выборочное составляет 174.2. 
# Найдите доверительный интервал для математического ожидания 
# с надежностью 0.95.
alfa=0.05
dov_interval=0.95
mu=174.2
n=27
disper=25
sigma=math.sqrt(disper)
z_alfa_2=stats.norm.ppf(0.975)
print(f"доверительный интервал ({round(mu-z_alfa_2*sigma/math.sqrt(n),3)},{round(mu+z_alfa_2*sigma/math.sqrt(n),3)})")
